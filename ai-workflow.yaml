name: Fix security vulnerabilities with AI

on:
  # Trigger on cron schedule (runs daily at 2 AM UTC)
  schedule:
    - cron: '0 2 * * *'
  
  # Trigger on pull requests
  pull_request:
    branches:
      - main
  
  # Trigger when code is merged to main
  push:
    branches:
      - main

jobs:
  snyk-security-scan:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js (adjust version as needed for your project)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci

      # Step 4: Install Snyk CLI
      - name: Install Snyk CLI
        run: npm install -g snyk

      # Step 5: Authenticate with Snyk
      - name: Authenticate Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Step 6: Run Snyk vulnerability scan
      - name: Run Snyk vulnerability scan
        run: snyk test --json --severity-threshold=high > snyk-results.json || true

      # Step 7: Run Snyk monitor (optional - sends results to Snyk dashboard)
      - name: Monitor project with Snyk
        run: snyk monitor
        continue-on-error: true

      # Step 8: Filter and display high-risk vulnerabilities
      - name: Extract high-risk vulnerabilities
        run: |
          echo "=== HIGH RISK VULNERABILITIES ==="
          snyk test --severity-threshold=high --json | jq '.vulnerabilities[] | select(.severity == "high" or .severity == "critical") | {title: .title, severity: .severity, package: .packageName, version: .version, identifiers: .identifiers}'

      # Step 9: Generate summary report of high-risk issues
      - name: Generate vulnerability summary
        run: |
          echo "## Snyk Vulnerability Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Scan Date:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          HIGH_COUNT=$(snyk test --json 2>/dev/null | jq '[.vulnerabilities[] | select(.severity == "high")] | length' || echo "0")
          CRITICAL_COUNT=$(snyk test --json 2>/dev/null | jq '[.vulnerabilities[] | select(.severity == "critical")] | length' || echo "0")
          
          echo "**Critical Vulnerabilities:** $CRITICAL_COUNT" >> $GITHUB_STEP_SUMMARY
          echo "**High Vulnerabilities:** $HIGH_COUNT" >> $GITHUB_STEP_SUMMARY

      # Step 10: Upload Snyk results as artifact
      - name: Upload Snyk scan results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: snyk-vulnerability-report
          path: snyk-results.json

      # Step 11: Fail the workflow if high-risk vulnerabilities are found
      - name: Check for high-risk vulnerabilities
        run: |
          snyk test --severity-threshold=high